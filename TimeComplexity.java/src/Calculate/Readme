This code write to calculate Time Complexity in DSA Algorithms in scenario if an Algorithms take n seconds
for n numbers of INPUT and we want calculate time complexity if input is increased to n numbers .
1. Linear Time Complexity: o(n)
Definition: An algorithm has linear time complexity if the number of operations it performs grows directly proportional
to the input size. In other words, if you double the input size, the running time will roughly double as well.
ex . sec = 0.5 input 100 and increased Input to 500 then time complexity will 12.5

2. Quadratic Time Complexity: O(n^2)
sec = 0.5 input 100 and increased Input to 500 then time complexity will 62.5

3.Cubic Time Complexity:O(n^3)
sec = 0.5 input 100 and increased Input to 500 then time complexity will 12.5

4.Logarithmic Time Complexity: O(lon n)
sec = 0.5 input 100 and increased Input to 500 then time complexity will 0.675